#첫번째 버전
def solution(n):
    ans = 1

    while n!= 1:
        if n%2 == 0:
            n = n/2
        else:
            n -= 1
            ans += 1

    return ans

#두번째 버전 (위 코드를 정리)
def solution(n):
    ans = 1
    
    while n > 1:
        ans += n%2
        n= n//2

    return ans

#다른 사람 풀이
def solution(n):
    return bin(n).count('1')

# 어떻게 이런 생각을 할까 신기하다
# 2배수로 이동할 수 있을 때 이진법으로 표현하면
# 끝자리가 0이면 2로 나눠지고 1이면 2로 나눠지지 않는다.
# 만약 6이라면 다음과 같이 표현된다.
# 6(110) -> 3(11)
# 3(11) -> 2(10)
# 2(10) -> 1(1)
# 1(1) -> 0(0)
# 여기서 끝자리가 1이 0이 된 것을 세면되는데
# n의 이진법에서 1의 개수와 똑같은 것을 알 수 있다!